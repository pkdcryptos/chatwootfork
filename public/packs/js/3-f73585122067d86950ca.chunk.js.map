{"version":3,"sources":["webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/markdown-it/lib/rules_core/text_join.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_inline/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/rules_inline/fragments_join.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js"],"names":["module","exports","encode","decode","format","parse","Ruler","this","__rules__","__cache__","prototype","__find__","name","i","length","__compile__","self","chains","forEach","rule","enabled","alt","altName","indexOf","push","chain","fn","at","options","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","Array","isArray","result","idx","enableOnly","disable","getRules","chainName","Token","type","tag","nesting","attrs","map","level","children","content","markup","info","meta","block","hidden","attrIndex","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","__webpack_amd_options__","open_tag","close_tag","HTML_TAG_RE","RegExp","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","j","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","ch","start","pos","src","charCodeAt","scanDelims","String","fromCharCode","open","can_open","close","can_close","curr","tokens_meta","isStrong","_typeof","obj","Symbol","iterator","constructor","_hasOwnProperty","Object","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","assign","sources","slice","arguments","TypeError","keys","isString","toString","_class","unescapeMd","str","replace","unescapeAll","match","escaped","entity","code","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","tail","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","filter","schema_test","src_ZPCc","schema_search","schema_at_start","pretest","__index__","__text_cache__","resetScanCache","Match","shift","__last_index__","schema","__schema__","lastIndex","raw","url","createMatch","LinkifyIt","schemas","reduce","acc","k","add","definition","set","m","ml","me","next","tld_pos","exec","testSchemaAt","search","matchAtStart","keepOld","sort","el","arr","reverse","Any","Cc","Cf","P","Z","root","freeExports","nodeType","freeModule","freeGlobal","global","window","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","error","RangeError","array","mapDomain","string","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","out","basic","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","lastIndexOf","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","defaultChars","MarkdownIt","presetName","inline","core","renderer","linkify","configure","presets","components","rules","ruler","rules2","ruler2","missed","use","plugin","args","apply","env","State","process","render","parseInline","inlineMode","renderInline","encodeCache","exclude","keepEscaped","l","nextCode","cache","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","substr","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","md","skipToken","ok","lines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","langAttrs","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","last","StateCore","startLine","endLine","prevLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","parentType","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","block_names","HTML_SEQUENCES","html","tmp","skipSpacesBack","skipCharsBack","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","SCHEME_RE","linkLevel","pmax","ws","ESCAPED","ch1","ch2","origStr","escapedStr","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking"],"mappings":"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","file":"js/3-f73585122067d86950ca.chunk.js","sourcesContent":["module.exports = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;","'use strict';\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse = require('./parse');","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n/**\n * new Ruler()\n **/\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n} ////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n// Find rule index by name\n//\n\n\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Build rules lookup cache\n//\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and enable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\n\n\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n\n  this.enable(list, ignoreInvalid);\n};\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  } // Chain can be empty, if rules disabled. But we still have to return Array.\n\n\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;","// Token class\n'use strict';\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\n\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n\n  this.tag = tag;\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n\n  this.attrs = null;\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n\n  this.map = null;\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n\n  this.nesting = nesting;\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n\n  this.level = 0;\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n\n  this.children = null;\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n\n  this.content = '';\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n\n  this.markup = '';\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n\n  this.info = '';\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n\n  this.meta = null;\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n\n  this.block = false;\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n\n  this.hidden = false;\n}\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\n\n\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) {\n    return -1;\n  }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\n\n\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\n\n\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [name, value];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\n\n\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name),\n      value = null;\n\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n\n  return value;\n};\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\n\n\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\nmodule.exports = Token;","module.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;","module.exports = /[\\0-\\x1F\\x7F-\\x9F]/;","module.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n/*eslint quotes:0*/\n\nmodule.exports = require('entities/lib/maps/entities.json');","// Regexps to match html elements\n'use strict';\n\nvar attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\nvar attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nvar attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nvar open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;","// ~~strike through~~\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i,\n      scanned,\n      token,\n      len,\n      ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) {\n    return false;\n  }\n\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker: marker,\n      length: 0,\n      // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E\n    /* ~ */\n    ) {\n        continue;\n      }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  } // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n\n\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Process *this* and _that_\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F\n    /* _ */\n    && startDelim.marker !== 0x2A\n    /* * */\n    ) {\n        continue;\n      } // Process only opening markers\n\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end]; // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n\n    isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && // check that first two markers match and adjacent\n    delimiters[i - 1].marker === startDelim.marker && delimiters[i - 1].token === startDelim.token - 1 && // check that last two markers are adjacent (we can safely assume they match)\n    delimiters[startDelim.end + 1].token === endDelim.token + 1;\n    ch = String.fromCharCode(startDelim.marker);\n    token = state.tokens[startDelim.token];\n    token.type = isStrong ? 'strong_open' : 'em_open';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = isStrong ? 'strong_close' : 'em_close';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Utilities\n//\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (_typeof(source) !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\n\n\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex'); // Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' '); // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  } // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n\n\n  return str.toLowerCase().toUpperCase();\n} ////////////////////////////////////////////////////////////////////////////////\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nexports.lib = {};\nexports.lib.mdurl = require('mdurl');\nexports.lib.ucmicro = require('uc.micro');\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.unescapeAll = unescapeAll;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint; // exports.replaceEntities     = replaceEntities;\n\nexports.escapeHtml = escapeHtml;\nexports.arrayReplaceAt = arrayReplaceAt;\nexports.isSpace = isSpace;\nexports.isWhiteSpace = isWhiteSpace;\nexports.isMdAsciiPunct = isMdAsciiPunct;\nexports.isPunctChar = isPunctChar;\nexports.escapeRE = escapeRE;\nexports.normalizeReference = normalizeReference;","'use strict'; ////////////////////////////////////////////////////////////////////////////////\n// Helpers\n// Merge objects\n//\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return _class(obj) === '[object Object]';\n}\n\nfunction isRegExp(obj) {\n  return _class(obj) === '[object RegExp]';\n}\n\nfunction isFunction(obj) {\n  return _class(obj) === '[object Function]';\n}\n\nfunction escapeRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp('^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i');\n      }\n\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp('^' + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n        // with code comments\n        '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' + self.re.src_port + self.re.src_host_terminator + self.re.src_path, 'i');\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') {\n          return 0;\n        }\n\n        if (pos >= 3 && text[pos - 3] === '/') {\n          return 0;\n        }\n\n        return tail.match(self.re.no_http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i');\n      }\n\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n\n      return 0;\n    }\n  }\n};\n/*eslint-disable max-len*/\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'; // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\n\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n/*eslint-enable max-len*/\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n} // Schemas compiler. Build regexps.\n//\n\n\nfunction compile(self) {\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__); // Define dynamic patterns\n\n\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n\n  tlds.push(re.src_xn);\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) {\n    return tpl.replace('%TLDS%', re.src_tlds);\n  }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i'); //\n  // Compile each schema\n  //\n\n  var aliases = [];\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name]; // skip disabled methods\n\n    if (val === null) {\n      return;\n    }\n\n    var compiled = {\n      validate: null,\n      link: null\n    };\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  }); //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n  }); //\n  // Fake record for guessed links\n  //\n\n  self.__compiled__[''] = {\n    validate: null,\n    normalize: createNormalizer()\n  }; //\n  // Build schema condition\n  //\n\n  var slist = Object.keys(self.__compiled__).filter(function (name) {\n    // Filter disabled & fake schemas\n    return name.length > 0 && self.__compiled__[name];\n  }).map(escapeRE).join('|'); // (?!_) cause 1.5x slowdown\n\n  self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n  self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@', 'i'); //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\n\n\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end = self.__last_index__,\n      text = self.__text_cache__.slice(start, end);\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n\n\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n\n  this.url = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\n\n\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options); // Cache last tested result. Used to skip repeating steps on next `match` call.\n\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n  this.re = {};\n  compile(this);\n}\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\n\n\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\n\n\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\n\n\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) {\n    return false;\n  }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos; // try to scan for link with schema - that's the most simple rule\n\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\n\n\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\n\n\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\n\n\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0,\n      result = []; // Try to take previous element from cache, if .test() called before\n\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  } // Cut head if cache was used\n\n\n  var tail = shift ? text.slice(shift) : text; // Scan string until end reached\n\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\n\n\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n  if (!text.length) return null;\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n  this.__schema__ = m[2];\n  this.__index__ = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n  return createMatch(this, 0);\n};\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\n\n\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list).sort().filter(function (el, idx, arr) {\n    return el !== arr[idx - 1];\n  }).reverse();\n  compile(this);\n  return this;\n};\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\n\n\nLinkifyIt.prototype.normalize = function normalize(match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n  if (!match.schema) {\n    match.url = 'http://' + match.url;\n  }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\n\n\nLinkifyIt.prototype.onCompile = function onCompile() {};\n\nmodule.exports = LinkifyIt;","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc = require('./categories/Cc/regex');\nexports.Cf = require('./categories/Cf/regex');\nexports.P = require('./categories/P/regex');\nexports.Z = require('./categories/Z/regex');","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) == 'object' && module && !module.nodeType && module;\n  var freeGlobal = (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && _typeof(define.amd) == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","'use strict';\n\nmodule.exports = require('./lib/');","'use strict';\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {}; // Use direct extract instead of `regenerate` to reduse browserified size\n\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z = require('uc.micro/categories/Z/regex').source;\n  re.src_P = require('uc.micro/categories/P/regex').source; // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|'); // \\p{\\Z\\Cc} (white spaces + control)\n\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|'); // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n\n  var text_separators = \"[><\\uFF5C]\"; // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'; // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'; // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n  re.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n  re.src_host_terminator = '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' + '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n  re.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' + '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' + // allow `I'm_king` if no pair found\n  '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n  // github has ... in commit range links,\n  // Restrict to\n  // - english\n  // - percent-encoded\n  // - parts of file path\n  // - params separator\n  // until more examples found.\n  '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' + (opts['---'] ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n  : '\\\\-+|') + ',(?!' + re.src_ZCc + '|$)|' + // allow `,,,` in paths\n  ';(?!' + re.src_ZCc + '|$)|' + // allow `;` if not followed by space-like char\n  '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' + // allow `!!!` in paths, but not at the end\n  '\\\\?(?!' + re.src_ZCc + '|[?]|$)' + ')+' + '|\\\\/' + ')?'; // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n\n  re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n  re.src_xn = 'xn--[a-z0-9\\\\-]{1,59}'; // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root = // Allow letters & digits (http://test1)\n  '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')';\n  re.src_domain = '(?:' + re.src_xn + '|' + '(?:' + re.src_pseudo_letter + ')' + '|' + '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' + ')';\n  re.src_host = '(?:' + // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n  '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain\n  /*_root*/\n  + ')' + ')';\n  re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\n  re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n  re.src_host_strict = re.src_host + re.src_host_terminator;\n  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator; ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n  // Rude test fuzzy links by host, for quick deny\n\n  re.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n  re.tpl_email_fuzzy = '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' + '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n  return re;\n};","// Main parser class\n'use strict';\n\nvar utils = require('./common/utils');\n\nvar helpers = require('./helpers');\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar LinkifyIt = require('linkify-it');\n\nvar mdurl = require('mdurl');\n\nvar punycode = require('punycode');\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n}; ////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  } // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n\n\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\n\n\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n\n  this.inline = new ParserInline();\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.block = new ParserBlock();\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.core = new ParserCore();\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n\n  this.renderer = new Renderer();\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n\n  this.linkify = new LinkifyIt();\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n\n  this.validateLink = validateLink;\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n\n  this.normalizeLink = normalizeLink;\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n\n  this.normalizeLinkText = normalizeLinkText; // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n\n  this.utils = utils;\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n\n  this.helpers = utils.assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) {\n    this.set(options);\n  }\n}\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\n\n\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\n\n\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this,\n      presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\n\n\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\n\n\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\n\n\nMarkdownIt.prototype.use = function (plugin\n/*, params, ... */\n) {\n  var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\n\n\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\n\n\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\n\n\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\n\n\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","'use strict';\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;","'use strict';\n\nmodule.exports = function format(url) {\n  var result = '';\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n  return result;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; //\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\n/* eslint-disable no-script-url */\n// protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n/* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) {\n    return url;\n  }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  var i,\n      l,\n      lowerProto,\n      hec,\n      slashes,\n      rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') {\n      hostEnd--;\n    }\n\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(host); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n\n        if (!part) {\n          continue;\n        }\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n\n  if (rest) {\n    this.pathname = rest;\n  }\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function (host) {\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) {\n    this.hostname = host;\n  }\n};\n\nmodule.exports = urlParse;","module.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;","// Just a shortcut for bulk export\n'use strict';\n\nexports.parseLinkLabel = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle = require('./parse_link_title');","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  return labelEnd;\n};","// Parse link destination\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code,\n      level,\n      pos = start,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3C\n        /* < */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            result.pos = pos + 1;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return result;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) {\n        break;\n      }\n\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n\n        if (level > 32) {\n          return result;\n        }\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        if (level === 0) {\n          break;\n        }\n\n        level--;\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};","// Parse link title\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return result;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28\n    /* ( */\n    && marker === 0x29\n    /* ) */\n    ) {\n        return result;\n      } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\nvar assign = require('./common/utils').assign;\n\nvar unescapeAll = require('./common/utils').unescapeAll;\n\nvar escapeHtml = require('./common/utils').escapeHtml; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar default_rules = {};\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(token.content) + '</code>';\n};\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted,\n      i,\n      arr,\n      tmpAttrs,\n      tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  } // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n\n\n  if (info) {\n    i = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    } // Fake token just to render attributes\n\n\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n    return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n  }\n\n  return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n};\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx]; // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\n\ndefault_rules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\ndefault_rules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n\ndefault_rules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n\ndefault_rules.html_block = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\ndefault_rules.html_inline = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\n\n\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\n\n\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) {\n    return '';\n  }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\n\n\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx]; // Tight list paragraphs\n\n  if (token.hidden) {\n    return '';\n  } // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n\n\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  } // Add token name, e.g. `<img`\n\n\n  result += (token.nesting === -1 ? '</' : '<') + token.tag; // Encode attributes, e.g. `<img src=\"foo\"`\n\n  result += this.renderAttrs(token); // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  } // Check if we need to add a newline after this tag\n\n\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\n\n\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [['normalize', require('./rules_core/normalize')], ['block', require('./rules_core/block')], ['inline', require('./rules_core/inline')], ['linkify', require('./rules_core/linkify')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')], // `text_join` finds `text_special` tokens (for escape sequences)\n// and joins them with the rest of the text\n['text_join', require('./rules_core/text_join')]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\nmodule.exports = Core;","// Normalize input string\n'use strict'; // https://spec.commonmark.org/0.29/#line-ending\n\nvar NEWLINES_RE = /\\r\\n?|\\n/g;\nvar NULL_RE = /\\0/g;\n\nmodule.exports = function normalize(state) {\n  var str; // Normalize newlines\n\n  str = state.src.replace(NEWLINES_RE, '\\n'); // Replace NULL characters\n\n  str = str.replace(NULL_RE, \"\\uFFFD\");\n  state.src = str;\n};","'use strict';\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      currentToken,\n      nodes,\n      ln,\n      text,\n      pos,\n      lastPos,\n      level,\n      htmlLinkLevel,\n      url,\n      fullUrl,\n      urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i]; // Skip content of markdown links\n\n      if (currentToken.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        text = currentToken.content;\n        links = state.md.linkify.match(text); // Now split string to nodes\n\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0; // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n\n        if (links.length > 0 && links[0].index === 0 && i > 0 && tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n\n          urlText = links[ln].text; // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new state.Token('link_open', 'a', 1);\n          token.attrs = [['href', fullUrl]];\n          token.level = level++;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level = level;\n          nodes.push(token);\n          token = new state.Token('link_close', 'a', -1);\n          token.level = --level;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          lastPos = links[ln].lastIndex;\n        }\n\n        if (lastPos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict'; // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/; // Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\n\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '±') // .., ..., ....... -> …\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n        .replace(/(^|[^-])---(?=[^-]|$)/mg, \"$1\\u2014\") // en-dash\n        .replace(/(^|\\s)--(?=\\s|$)/mg, \"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, \"$1\\u2013\");\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n};","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = \"\\u2019\";\n/* ’ */\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n\n    stack.length = j + 1;\n\n    if (token.type !== 'text') {\n      continue;\n    }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n\n      if (!t) {\n        break;\n      }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = t[0] === \"'\"; // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      } // Find next character,\n      // default to space if it's the end of the line\n      //\n\n\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22\n      /* \" */\n      && t[0] === '\"') {\n        if (lastChar >= 0x30\n        /* 0 */\n        && lastChar <= 0x39\n        /* 9 */\n        ) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            } // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n\n\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\nmodule.exports = function text_join(state) {\n  var j,\n      l,\n      tokens,\n      curr,\n      max,\n      last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) {\n          tokens[last] = tokens[curr];\n        }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n} // re-export Token class to use in core rules\n\n\nStateCore.prototype.Token = Token;\nmodule.exports = StateCore;","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', require('./rules_block/table'), ['paragraph', 'reference']], ['code', require('./rules_block/code')], ['fence', require('./rules_block/fence'), ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'reference', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'reference', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'reference', 'blockquote']], ['reference', require('./rules_block/reference')], ['html_block', require('./rules_block/html_block'), ['paragraph', 'reference', 'blockquote']], ['heading', require('./rules_block/heading'), ['paragraph', 'reference', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['paragraph', require('./rules_block/paragraph')]];\n/**\n * new ParserBlock()\n **/\n\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n} // Generate tokens for input range\n//\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok,\n      i,\n      prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    } // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n\n\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n\n        break;\n      }\n    } // this can only happen if user disables paragraph rule\n\n\n    if (!ok) throw new Error('none of the block rules matched'); // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\n\n\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) {\n    return;\n  }\n\n  state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\nParserBlock.prototype.State = require('./rules_block/state_block');\nmodule.exports = ParserBlock;","// GFM table, https://github.github.com/gfm/#tables-extension-\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c\n    /* | */\n    ) {\n        if (!isEscaped) {\n          // pipe separating cells, '|'\n          result.push(current + str.substring(lastPos, pos));\n          current = '';\n          lastPos = pos + 1;\n        } else {\n          // escaped pipe, '\\|'\n          current += str.substring(lastPos, pos - 1);\n          lastPos = pos;\n        }\n      }\n\n    isEscaped = ch === 0x5c\n    /* \\ */\n    ;\n    pos++;\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules, firstCh, secondCh; // should have at least two lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // if it's indented more than 3 spaces, it should be a code block\n\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  firstCh = state.src.charCodeAt(pos++);\n\n  if (firstCh !== 0x7C\n  /* | */\n  && firstCh !== 0x2D\n  /* - */\n  && firstCh !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  secondCh = state.src.charCodeAt(pos++);\n\n  if (secondCh !== 0x7C\n  /* | */\n  && secondCh !== 0x2D\n  /* - */\n  && secondCh !== 0x3A\n  /* : */\n  && !isSpace(secondCh)) {\n    return false;\n  } // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n\n\n  if (firstCh === 0x2D\n  /* - */\n  && isSpace(secondCh)) {\n    return false;\n  }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n  columns = lineText.split('|');\n  aligns = [];\n\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop(); // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n\n  columnCount = columns.length;\n\n  if (columnCount === 0 || columnCount !== aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table'; // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n  token = state.push('thead_open', 'thead', 1);\n  token.map = [startLine, startLine + 1];\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.children = [];\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  token = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (!lineText) {\n      break;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [startLine + 2, 0];\n    }\n\n    token = state.push('tr_open', 'tr', 1);\n    token.map = [nextLine, nextLine + 1];\n\n    for (i = 0; i < columnCount; i++) {\n      token = state.push('td_open', 'td', 1);\n\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n\n      token = state.push('inline', '', 0);\n      token.content = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};","// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map = [startLine, state.line];\n  return true;\n};","// fences (``` lang, ~~~ lang)\n'use strict';\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      token,\n      markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60\n  /* ` */\n  ) {\n      if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n        return false;\n      }\n    } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n};","// Block quotes\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  }\n\n  oldBMarks = [];\n  oldBSCount = [];\n  oldSCount = [];\n  oldTShift = [];\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote'; // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    && !isOutdented) {\n      // This line is inside the blockquote.\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1; // skip one optional space after '>'\n\n      if (state.src.charCodeAt(pos) === 0x20\n      /* space */\n      ) {\n          // ' >   test '\n          //     ^ -- position start of line here:\n          pos++;\n          initial++;\n          adjustTab = false;\n          spaceAfterMarker = true;\n        } else if (state.src.charCodeAt(pos) === 0x09\n      /* tab */\n      ) {\n          spaceAfterMarker = true;\n\n          if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n            // '  >\\t  test '\n            //       ^ -- position start of line here (tab has width===1)\n            pos++;\n            initial++;\n            adjustTab = false;\n          } else {\n            // ' >\\t  test '\n            //    ^ -- position start of line here + shift bsCount slightly\n            //         to make extra space appear\n            adjustTab = true;\n          }\n        } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]); // A negative indentation means that this is a paragraph continuation\n    //\n\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  token = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map = lines = [startLine, 0];\n  state.md.block.tokenize(state, startLine, nextLine);\n  token = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};","// Horizontal rule\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n};","// Lists\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace; // Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine]; // List marker should have at least 2 chars (digit + dot)\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        // List marker should have no more than 9 digits\n        // (prevents integer overflow in browsers)\n        if (pos - start >= 10) {\n          return -1;\n        }\n\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n\n\n  if (state.listIndent >= 0 && state.sCount[nextLine] - state.listIndent >= 4 && state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n\n\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  } // Detect list type and position after marker\n\n\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1)); // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  } // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n\n\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  } // For validation mode we can terminate immediately\n\n\n  if (silent) {\n    return true;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // Start list\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map = listLines = [nextLine, 0];\n  token.markup = String.fromCharCode(markerCharCode); //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = initial + indentAfterMarker; // Run subparser & write tokens\n\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map = itemLines = [nextLine, 0];\n\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    } // change current state, then restore it after parser subcall\n\n\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine]; //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    } // If any of list item is tight, mark list as tight\n\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - nextLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    } // if it's indented more than 3 spaces, it should be a code block\n\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finalize list\n\n\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    } // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n\n\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    && state.src.charCodeAt(pos - 1) !== 0x5C\n    /* \\ */\n    ) {\n        if (pos + 1 === max) {\n          return false;\n        }\n\n        if (state.src.charCodeAt(pos + 1) !== 0x3A\n        /* : */\n        ) {\n            return false;\n          }\n\n        break;\n      }\n  }\n\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  terminatorRules = state.md.block.ruler.getRules('reference');\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n        return false;\n      } else if (ch === 0x5D\n    /* ] */\n    ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A\n    /* \\n */\n    ) {\n        lines++;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        pos++;\n\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    } // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n\n  if (!res.ok) {\n    return false;\n  }\n\n  href = state.md.normalizeLink(res.str);\n\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n\n  pos = res.pos;\n  lines += res.lines; // save cursor state, we could require to rollback later\n\n  destEndPos = pos;\n  destEndLineNo = lines; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  } // skip trailing spaces until the rest of the line\n\n\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  } // Reference can not terminate anything. This check is for safety only.\n\n  /*istanbul ignore if*/\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  state.parentType = oldParentType;\n  state.line = startLine + lines + 1;\n  return true;\n};","// HTML block\n'use strict';\n\nvar block_names = require('../common/html_blocks');\n\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE; // An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\n\n\nvar HTML_SEQUENCES = [[/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i,\n      nextLine,\n      token,\n      lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1; // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n  token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n};","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n'use strict';\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'section', 'source', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];","// heading (#, ##, ...)\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = state.src.slice(pos, max).trim();\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n  return true;\n};","// lheading (---, ===)\n'use strict';\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      pos,\n      max,\n      level,\n      marker,\n      nextLine = startLine + 1,\n      oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'); // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n  // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } //\n    // Check for underline in setext header\n    //\n\n\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D\n        /* - */\n        || marker === 0x3D\n        /* = */\n        ) {\n            pos = state.skipChars(pos, marker);\n            pos = state.skipSpaces(pos);\n\n            if (pos >= max) {\n              level = marker === 0x3D\n              /* = */\n              ? 1 : 2;\n              break;\n            }\n          }\n      }\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = String.fromCharCode(marker);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line - 1];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n};","// Paragraph\n'use strict';\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  token = state.push('paragraph_open', 'p', 1);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n};","// Parser state class\n'use strict';\n\nvar Token = require('../token');\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n  this.src = src; // link to parser instance\n\n  this.md = md;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n\n  this.sCount = []; // indents for each line (tabs expanded)\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n\n  this.bsCount = []; // block parser variables\n\n  this.blkIndent = 0; // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n\n  this.parentType = 'root';\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n} // Push new token to \"stream\".\n//\n\n\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n  if (nesting < 0) this.level--; // closing tag\n\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip spaces from given position in reverse.\n\n\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      lineIndent,\n      ch,\n      first,\n      last,\n      queue,\n      lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n}; // re-export Token class to use in block rules\n\n\nStateBlock.prototype.Token = Token;\nmodule.exports = StateBlock;","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\nvar Ruler = require('./ruler'); ////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['linkify', require('./rules_inline/linkify')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['strikethrough', require('./rules_inline/strikethrough').tokenize], ['emphasis', require('./rules_inline/emphasis').tokenize], ['link', require('./rules_inline/link')], ['image', require('./rules_inline/image')], ['autolink', require('./rules_inline/autolink')], ['html_inline', require('./rules_inline/html_inline')], ['entity', require('./rules_inline/entity')]]; // `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\n\nvar _rules2 = [['balance_pairs', require('./rules_inline/balance_pairs')], ['strikethrough', require('./rules_inline/strikethrough').postProcess], ['emphasis', require('./rules_inline/emphasis').postProcess], // rules for pairs separate '**' into its own text tokens, which may be left unused,\n// rule below merges unused segments back with the rest of the text\n['fragments_join', require('./rules_inline/fragments_join')]];\n/**\n * new ParserInline()\n **/\n\nfunction ParserInline() {\n  var i;\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n\n\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n} // Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\n\n\nParserInline.prototype.skipToken = function (state) {\n  var ok,\n      i,\n      pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) {\n          throw new Error(\"inline rule didn't increment state.pos\");\n        }\n\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) {\n    state.pos++;\n  }\n\n  cache[pos] = state.pos;\n}; // Generate tokens for input range\n//\n\n\nParserInline.prototype.tokenize = function (state) {\n  var ok,\n      i,\n      prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          if (prevPos >= state.pos) {\n            throw new Error(\"inline rule didn't increment state.pos\");\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\n\n\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\nmodule.exports = ParserInline;","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n}; // Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/","// Process links like https://example.org/\n'use strict'; // RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n  pos = state.pos;\n  max = state.posMax;\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A\n  /* : */\n  ) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F\n  /* / */\n  ) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F\n  /* / */\n  ) return false;\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n  proto = match[1];\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n  url = link.url; // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n\n  if (url.length <= proto.length) return false; // disallow '*' at the end of the link (conflicts with emphasis)\n\n  url = url.replace(/\\*+$/, '');\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n    token = state.push('link_open', 'a', 1);\n    token.attrs = [['href', fullUrl]];\n    token.markup = 'linkify';\n    token.info = 'auto';\n    token = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n    token = state.push('link_close', 'a', -1);\n    token.markup = 'linkify';\n    token.info = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};","// Proceess '\\n'\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      ws,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) {\n          ws--;\n        }\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","// Process escaped chars and hardbreaks\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch1,\n      ch2,\n      origStr,\n      escapedStr,\n      token,\n      pos = state.pos,\n      max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) return false;\n  pos++; // '\\' at the end of the inline block\n\n  if (pos >= max) return false;\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++; // skip leading whitespaces from next line\n\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};","// Parse backticks\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start,\n      max,\n      marker,\n      token,\n      matchStart,\n      matchEnd,\n      openerLength,\n      closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax; // scan marker length\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos; // Nothing found in the cache, scan until the end of the line (or until marker is found)\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1; // scan marker length\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/\\n/g, ' ').replace(/^ (.+) $/, '$1');\n      }\n\n      state.pos = matchEnd;\n      return true;\n    } // Some different length found, put it in cache as upper limit of where closer can be found\n\n\n    state.backticks[closerLength] = matchStart;\n  } // Scanned through the end, didn't find anything\n\n\n  state.backticksScanned = true;\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};","// Process [link](<to> \"stuff\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // might have found a valid shortcut link, disable reference parsing\n      parseReference = false; // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        } // [link](  <href>  \"title\"  )\n        //                ^^ skipping these spaces\n\n\n        start = pos;\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        } // [link](  <href>  \"title\"  )\n        //                  ^^^^^^^ parsing link title\n\n\n        res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n        if (pos < max && start !== pos && res.ok) {\n          title = res.str;\n          pos = res.pos; // [link](  <href>  \"title\"  )\n          //                         ^^ skipping these spaces\n\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n\n            if (!isSpace(code) && code !== 0x0A) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          // parsing a valid shortcut link failed, fallback to reference\n          parseReference = true;\n        }\n\n      pos++;\n    }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process ![image](<src> \"title\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\nmodule.exports = function autolink(state, silent) {\n  var url,\n      fullUrl,\n      token,\n      ch,\n      start,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n    ch = state.src.charCodeAt(pos);\n    if (ch === 0x3C\n    /* < */\n    ) return false;\n    if (ch === 0x3E\n    /* > */\n    ) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};","// Process html tags\n'use strict';\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function html_inline(state, silent) {\n  var ch,\n      match,\n      max,\n      token,\n      pos = state.pos;\n\n  if (!state.md.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    token = state.push('html_inline', '', 0);\n    token.content = match[0];\n    if (isLinkOpen(token.content)) state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n\n  state.pos += match[0].length;\n  return true;\n};","// Process html entity - &#123;, &#xAF;, &quot;, ...\n'use strict';\n\nvar entities = require('../common/entities');\n\nvar has = require('../common/utils').has;\n\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\n\nvar fromCodePoint = require('../common/utils').fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      token,\n      pos = state.pos,\n      max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) return false;\n  if (pos + 1 >= max) return false;\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23\n  /* # */\n  ) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          token = state.push('text_special', '', 0);\n          token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\nfunction processDelimiters(delimiters) {\n  var closerIdx,\n      openerIdx,\n      closer,\n      opener,\n      minOpenerIdx,\n      newMinOpenerIdx,\n      isOddMatch,\n      lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n  if (!max) return; // headerIdx is the first delimiter of the current (where closer is) delimiter run\n\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n    jumps.push(0); // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token; // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n\n    closer.length = closer.length || 0;\n    if (!closer.close) continue; // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n        isOddMatch = false; // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n          closer.open = false;\n          opener.end = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1; // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\nmodule.exports = function fragments_join(state) {\n  var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};","// Inline parser state\n'use strict';\n\nvar Token = require('../token');\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n\n  this.cache = {}; // List of emphasis-like delimiters for current tag\n\n  this.delimiters = []; // Stack of delimiter lists for upper level tags\n\n  this._prev_delimiters = []; // backtick length => last seen position\n\n  this.backticks = {};\n  this.backticksScanned = false; // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n\n  this.linkLevel = 0;\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n\n    this._prev_delimiters.push(this.delimiters);\n\n    this.delimiters = [];\n    token_meta = {\n      delimiters: this.delimiters\n    };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n}; // Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\n\n\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open,\n      can_close,\n      isLastWhiteSpace,\n      isLastPunctChar,\n      isNextWhiteSpace,\n      isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start); // treat beginning of the line as a whitespace\n\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  count = pos - start; // treat end of the line as a whitespace\n\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open = left_flanking && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking || isNextPunctChar);\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    length: count\n  };\n}; // re-export Token class to use in block rules\n\n\nStateInline.prototype.Token = Token;\nmodule.exports = StateInline;","// markdown-it default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 100 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'fragments_join']\n    }\n  }\n};","// Commonmark default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'fragments_join']\n    }\n  }\n};"],"sourceRoot":""}